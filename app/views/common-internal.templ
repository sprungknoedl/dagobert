package views

import (
	"github.com/sprungknoedl/dagobert/app/model"
	"github.com/sprungknoedl/dagobert/pkg/fp"
)

type navbarConfig struct {
	preTitle    templ.Component
	preButtons  templ.Component
	hideImport  bool
	hideExport  bool
	hideRefresh bool
	hideAdd     bool
	hideSearch  bool
}

type navbarOption func(*navbarConfig)

func applynavOptions(opts []navbarOption) navbarConfig {
	cfg := navbarConfig{}
	for _, opt := range opts {
		opt(&cfg)
	}
	return cfg
}

func navPreTitle(c templ.Component) navbarOption {
	return func(nc *navbarConfig) { nc.preTitle = c }
}
func navPreButtons(c templ.Component) navbarOption {
	return func(nc *navbarConfig) { nc.preButtons = c }
}

func navHideImport() navbarOption  { return func(nc *navbarConfig) { nc.hideImport = true } }
func navHideExport() navbarOption  { return func(nc *navbarConfig) { nc.hideExport = true } }
func navHideRefresh() navbarOption { return func(nc *navbarConfig) { nc.hideRefresh = true } }
func navHideAdd() navbarOption     { return func(nc *navbarConfig) { nc.hideAdd = true } }
func navHideSearch() navbarOption  { return func(nc *navbarConfig) { nc.hideSearch = true } }

func navSettings() navbarOption { return navPreTitle(navSettingsTitle()) }

templ navSettingsTitle() {
	<li><i class="hio hio-6 hio-cog-6-tooth mr-2"></i> Settings</li>
}

templ navbar(env Env, title string, opts ...navbarOption) {
	{{ cfg := applynavOptions(opts) }}
	<nav class="navbar sticky top-0 bg-base-100 z-10 p-2 -mt-4">
		<div class="flex-none breadcrumbs font-bold text-2xl">
			<ul>
				if cfg.preTitle != nil {
					@cfg.preTitle
				}
				if env.Case.ID != "" {
					<li class="inline-flex gap-2">
						<i class="hio hio-6 hio-briefcase inline-block"></i>
						{ env.Case.Name }
					</li>
				}
				<li class="text-neutral">{ title }</li>
			</ul>
		</div>
		<div class="flex-1"></div>
		<div class="flex-none flex gap-4">
			if !cfg.hideSearch {
				<!-- search input -->
				<label class="w-96 input flex items-center gap-2">
					<input type="search" name="search" class="search grow" placeholder="Search ..."/>
					<svg class="w-6 h-6 opacity-70" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
						<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z"></path>
					</svg>
				</label>
			}
			<!-- buttons -->
			<div class="join" role="group">
				if cfg.preButtons != nil {
					@cfg.preButtons
				}
				if uri, ok := env.Allowed("POST", env.Route+"import/csv"); ok && !cfg.hideImport {
					<a class="join-item btn" href={ uri } up-layer="new drawer" up-accept-location={ env.Route }>
						<i class="hio hio-6 hio-bars-arrow-up inline-block mr-1"></i> Import
					</a>
				}
				if uri, ok := env.Allowed("GET", env.Route+"export/csv"); ok && !cfg.hideExport {
					<a class="join-item btn" href={ uri }>
						<i class="hio hio-6 hio-bars-arrow-down inline-block mr-1"></i> Export
					</a>
				}
				if uri, ok := env.Allowed("GET", env.Route); ok && !cfg.hideRefresh {
					<a class="join-item btn" href={ uri } up-target="#list">
						<i class="hio hio-6 hio-arrow-path inline-block mr-1"></i> Refresh
					</a>
				}
				if uri, ok := env.Allowed("POST", env.Route+"new"); ok && !cfg.hideAdd {
					<a class="join-item btn btn-neutral" href={ uri } up-layer="new drawer" up-accept-location={ env.Route }>
						<i class="hio hio-6 hio-plus inline-block mr-1"></i> Add
					</a>
				}
			</div>
		</div>
	</nav>
}

templ sidebarLink(url string, title string, icon string, page string) {
	<li><a href={ url } title={ title } class={ fp.If(title == page, "menu-active", "") }><i class={ "hio hio-6 hio-" + icon }></i> </a></li>
}

templ sidebar(env Env, title string) {
	<aside class="flex flex-col h-screen fixed z-1 bg-base-100">
		<div class="w-8 h-8 m-4 mx-auto bg-primary text-primary-content rounded-lg p-2">
			<svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 200 200" stroke="none" fill="currentcolor">
				<path d="M 85.983611,0.225407 79.702871,7.899582 75.655731,6.567625 64.59016,2.438521 c 0.236151,4.683576 1.504994,9.387548 2.233601,14.016395 0.213132,1.354041 1.02937,3.45337 0.594277,4.784844 -0.453681,1.388325 -2.46723,2.35262 -3.565583,3.196719 -2.504971,1.925138 -4.860187,4.052364 -6.977453,6.403682 -5.639905,6.263368 -9.660731,14.25227 -11.321727,22.500012 -3.138556,15.58461 5.355451,30.06598 6.127049,45.36885 H 4.0983563 c 0.873436,8.314887 3.505121,17.037947 5.758196,25.081957 9.1953097,32.8295 28.1765237,66.49684 63.9549187,74.36476 7.20743,1.58498 14.41826,1.61885 21.76229,1.61885 15.529769,0 30.009039,-1.82492 43.893449,-9.31351 21.47643,-11.58337 33.93445,-36.61277 33.93445,-60.39959 0,-6.03764 -0.41075,-13.50171 -2.58197,-19.18034 17.68387,-6.91013 25.08195,-28.257767 25.08195,-45.737684 l -15.86065,10.000007 -16.22951,5.12293 -3.68852,-16.229525 19.91803,-4.057361 v -0.368853 c -7.04411,-4.025279 -15.08029,-6.586343 -22.5,-9.866809 -2.48872,-1.100352 -5.96391,-1.869493 -8.08402,-3.586071 -1.52427,-1.234121 -2.15653,-4.019448 -3.07377,-5.727445 -2.03213,-3.783961 -4.43432,-7.496979 -7.31556,-10.696736 C 126.74655,16.050514 106.56413,9.326408 88.565571,14.241802 l 5.90162,-8.852461 -8.48358,-5.163934 M 143.5246,66.250008 c 2.72257,14.085725 6.64983,28.026205 9.73361,42.049172 3.22222,14.65245 6.00656,29.24463 -0.60451,43.5246 -7.21557,15.58558 -20.16932,26.68034 -37.16189,30.10245 -8.47439,1.70665 -17.572839,0.88117 -26.188539,0.88117 -9.56827,0 -18.13066,-1.9046 -26.557371,-6.54714 -3.01407,-1.66054 -6.920792,-3.84042 -8.85246,-6.73155 l 14.016391,2.55121 11.06559,-0.33811 c -1.40176,-1.51314 -4.3182,-1.69886 -6.2705,-2.33607 -4.55216,-1.48576 -9.056905,-3.23479 -13.278693,-5.50204 -17.546125,-9.42294 -33.255439,-28.18362 -34.303283,-48.96516 h 47.581976 c -1.11288,-10.59436 -4.49454,-21.315747 -6.78279,-31.721307 -0.616494,-2.80343 -3.081566,-8.65182 -2.284844,-11.39348 0.349932,-1.20414 3.568994,-1.64103 4.641394,-1.93646 4.55814,-1.25564 9.11156,-2.55997 13.64755,-3.893435 7.73977,-2.275326 15.50194,-4.46004 23.237729,-6.752061 2.59503,-0.768856 7.30596,-3.120444 9.95899,-2.684406 2.92763,0.481164 6.0619,3.261247 8.85247,4.385235 6.2402,2.513384 12.83647,4.602256 19.54918,5.307382 m -27.2951,9.733615 c -11.17593,2.17312 -8.2508,19.93909 2.95084,17.78687 11.57638,-2.22422 8.87213,-20.08584 -2.95084,-17.78687 z"></path>
			</svg>
		</div>
		<div class="divider"></div>
		<ul class="menu gap-2">
			@sidebarLink("/", "Cases", "briefcase", title)
		</ul>
		if env.Case.ID != "" {
			<div class="divider"></div>
			<ul class="menu gap-2">
				@sidebarLink("/cases/"+env.Case.ID+"/summary/", "Summary", "home-modern", title)
				@sidebarLink("/cases/"+env.Case.ID+"/events/", "Timeline", "clock", title)
				@sidebarLink("/cases/"+env.Case.ID+"/assets/", "Assets", "computer-desktop", title)
				@sidebarLink("/cases/"+env.Case.ID+"/malware/", "Malware/Tools", "bug-ant", title)
				@sidebarLink("/cases/"+env.Case.ID+"/indicators/", "Indicators", "finger-print", title)
				@sidebarLink("/cases/"+env.Case.ID+"/evidences/", "Evidences", "cube", title)
				@sidebarLink("/cases/"+env.Case.ID+"/tasks/", "Tasks", "clipboard-document-check", title)
				@sidebarLink("/cases/"+env.Case.ID+"/notes/", "Notes", "chat-bubble-left", title)
			</ul>
			<div class="divider"></div>
			<ul class="menu gap-2">
				@sidebarLink("/cases/"+env.Case.ID+"/vis/network", "Lateral Movement", "presentation-chart-line", title)
				@sidebarLink("/cases/"+env.Case.ID+"/vis/timeline", "Visual Timeline", "presentation-chart-bar", title)
				<li><a href={ "/cases/" + env.Case.ID + "/reports" } title="Report" class="" up-layer="new drawer"><i class="hio hio-6 hio-document-arrow-down"></i> </a></li>
			</ul>
		}
		<div class="grow"></div>
		<div class="divider"></div>
		<ul class="menu gap-2">
			<li class="dropdown dropdown-right dropdown-end">
				<div tabindex="42" role="button"><i class="hio hio-6 hio-cog-6-tooth"></i></div>
				<ul tabindex="42" class="dropdown-content menu bg-base-200 rounded-box z-2 w-52 p-2 shadow">
					<li><a href="/settings/hooks/"><i class="hio hio-6 hio-bolt"></i> Automation Rules</a></li>
					<li><a href="/settings/api-keys/"><i class="hio hio-6 hio-beaker"></i> API Keys</a></li>
					<li><a href="/settings/enums/"><i class="hio hio-6 hio-briefcase"></i> Case Objects</a></li>
					<li><a href="/settings/reports/"><i class="hio hio-6 hio-document-arrow-down"></i> Report Templates</a></li>
					<li><a href="/settings/users/"><i class="hio hio-6 hio-users"></i> Users</a></li>
				</ul>
			</li>
			<li><a href="/auth/logout" title="Logout" class=""><i class="hio hio-6 hio-arrow-right-start-on-rectangle"></i> </a></li>
		</ul>
	</aside>
}

templ formatTime(t model.Time) {
	if t.IsZero() {
		-
	} else {
		{ t.Format("2006-01-02 15:04:05") } <span class="text-neutral-content">{ t.Format("Z07:00") }</span>
	}
}

templ actionBtn(env Env, method, url string) {
	if _, ok := env.Allowed(method, url); ok {
		<a class="join-item btn btn-sm" href={ url } up-method={ method } up-layer="new drawer" up-accept-location={ env.Route }>
			{ children... }
		</a>
	}
}

templ externalBtn(url string, label string) {
	<a class="join-item btn btn-sm" href={ url } target="_blank">
		{ label }
		{ children... }
	</a>
}

templ defaultActionBtns(env Env, url string) {
	@actionBtn(env, "GET", url) {
		<i class="hio hio-5 hio-pencil"></i>
	}
	@actionBtn(env, "DELETE", url) {
		<i class="hio hio-5 hio-trash"></i>
	}
}

templ enum(list []model.Enum, value string) {
	for _, x := range list {
		if x.Name == value {
			<span class={ "text-" + x.State }><i class={ "hio hio-5 " + x.Icon } title={ x.Name }></i> { x.Name }</span>
		}
	}
}

templ enumIcon(list []model.Enum, value string) {
	for _, x := range list {
		if x.Name == value {
			<span class={ "text-" + x.State }><i class={ "mr-2 hio hio-5 " + x.Icon } title={ x.Name }></i></span>
		}
	}
}

templ layout() {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="utf-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1"/>
			<title>Dagobert</title>
			<link href="/public/assets/dagobert.css" rel="stylesheet"/>
			<script src="/public/assets/list-2.3.1.min.js" defer></script>
			<script src="/public/assets/choices-11.1.0.min.js" defer></script>
			<script src="/public/assets/unpoly-3.10.2.min.js" defer></script>
			<script src="/public/assets/dagobert.js" defer></script>
		</head>
		<body>
			{ children... }
		</body>
	</html>
}

templ list(env Env, title string, opts ...navbarOption) {
	<div class="drawer-content flex">
		<section id="errors"></section>
		@sidebar(env, title)
		<main class="pl-20 p-4 grow max-w-full">
			@navbar(env, title, opts...)
			<div id="list">
				{ children... }
			</div>
		</main>
	</div>
}
