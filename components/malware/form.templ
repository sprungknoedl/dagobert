package malware

import (
    "github.com/sprungknoedl/dagobert/components/icons"
	"github.com/sprungknoedl/dagobert/components/utils"
    "github.com/sprungknoedl/dagobert/valid"
)

type MalwareDTO struct {
    ID       int64
    CaseID   int64
	Filename string `form:"filename"`
	Filepath string `form:"filepath"`
	CDate    string `form:"cDate"`
	MDate    string `form:"mDate"`
	System   string `form:"system"`
	Hash     string `form:"hash"`
	Notes    string `form:"notes"`
}


templ Form(env utils.Env, obj MalwareDTO, vr valid.Result) {
    <aside class="overflow-y-auto overflow-x-hidden fixed top-0 right-0 z-10 flex justify-center items-center w-full h-full backdrop-blur-lg backdrop-brightness-50"
        _="on closeModal remove me">
        <div class="w-1/2 m-8 bg-slate-800 shadow-xl rounded-xl">
            <form hx-post={env.Routes("save-malware", obj.CaseID, obj.ID)} hx-target="#modal">
                <header class="p-6 px-8 border-b border-b-slate-700 flex justify-between">
                    <h4 class="font-bold text-slate-200">
                        if obj.ID == 0 {
                            Add malware
                        } else {
                            Edit malware
                        }
                    </h4>
                    <div>
                        <button type="button" _="on click trigger closeModal"> @icons.XMark(icons.Default) </button>
                    </div>
                </header>
      
                <section class="p-8 flex flex-col gap-6">
                    @utils.WithLabel2("Filename", true)  { @utils.TextInput2("filename", obj.Filename, vr["Filename"]) }
                    @utils.WithLabel2("Filepath", false) { @utils.TextInput2("filepath", obj.Filepath, vr["Filepath"]) }
                    @utils.WithLabel2("C Date", false)   { @utils.TextInput2("cdate", obj.CDate, vr["CDate"]) }
                    @utils.WithLabel2("M Date", false)   { @utils.TextInput2("mdate", obj.MDate, vr["MDate"]) }
                    @utils.WithLabel2("System", true)    { @utils.TextInput2("system", obj.System, vr["System"]) }
                    @utils.WithLabel2("Hash", false)     { @utils.TextInput2("hash", obj.Hash, vr["Hash"]) }
                    @utils.WithLabel2("Notes", false)    { @utils.TextInput2("notes", obj.Notes, vr["Notes"]) }
                </section>

                <footer class="p-6 px-8 border-t border-t-slate-700 flex gap-4 items-center">
                    @utils.PrimaryButton(templ.Attributes{"type": "submit"}) { Save }
                    @utils.SecondaryButton(templ.Attributes{"_": "on click trigger closeModal"}) { Cancel }
                    <p class="ml-4 text-slate-600">Fields marked with <span class="font-bold text-rose-500">*</span> are required.</p>
                </footer>
            </form>
        </div>
    </aside>
}