package indicators

import (
	"github.com/sprungknoedl/dagobert/components/utils"
    "github.com/sprungknoedl/dagobert/model"
    "github.com/sprungknoedl/dagobert/valid"
)

type IndicatorDTO struct {
    ID          int64
    CaseID      int64
	Type        string `form:"type"`
	Value       string `form:"value"`
	TLP         string `form:"tlp"`
	Description string `form:"description"`
	Source      string `form:"source"`
}

templ Form(env utils.Env, obj IndicatorDTO, vr valid.Result) {
    @utils.Modal("max-w-4xl") {
        <form hx-post={env.Routes("save-indicator", obj.CaseID, obj.ID)} hx-target="#modal">
        @utils.ModalHeader() {
            if obj.ID == 0 {
                Add indicator
            } else {
                Edit indicator
            }
        }
                
        @utils.ModalBody() {
            @utils.SelectInput("Type", "type", obj.Type, model.IndicatorTypes, true, vr["Type"])
            @utils.TextInput("Value", "value", obj.Value, true, vr["Value"])
            @utils.SelectInput("TLP", "tlp", obj.TLP, model.IndicatorTLPs, true, vr["TLP"])
            @utils.TextInput("Source", "source", obj.Source, false, vr["Source"])
            @utils.TextareaInput("Description", "description", obj.Description, false, vr["Description"])
        }

        @utils.DefaultCrudFooter() {}
        </form>
    }
}