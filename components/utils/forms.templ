package utils

import (
    "github.com/sprungknoedl/dagobert/valid"
)

templ WithLabel(label string) {
    <div class="flex flex-row">
        <div class="grow-0 w-56 pt-2">
            <label> { label } </label>
        </div>
        <div class="grow">
            { children... }
        </div>
    </div>
}

templ WithLabel2(label string, required bool) {
    <div class="flex flex-row">
        <div class="grow-0 w-56 pt-2">
            <label>
                { label }
                if required {
                    <span class="font-bold text-rose-500">*</span>
                }
            </label>
        </div>
        <div class="grow">
            { children... }
        </div>
    </div>
}

templ TextInput(name string, value string) {
    <input name={name} value={value} type="text" class="px-4 w-full h-10 outline outline-2 outline-offset-2 outline-slate-600 focus:outline-pink-500 bg-slate-700 text-white caret-pink-500 rounded-md shadow-sm" />
}

templ TextInput2(name string, value string, vr valid.Condition) {
    <input name={name} value={value} type="text" class="px-4 w-full h-10 outline outline-2 outline-offset-2 only:outline-slate-600 outline-red-500 focus:outline-pink-500 bg-slate-700 text-white caret-pink-500 rounded-md shadow-sm" />
    if vr.Missing || vr.Invalid {
        <p class="text-red-500 pt-2">{ vr.String() }</p>
    }
}

templ TextareaInput(name string, value string) {
    <textarea name={name} rows="5" class="p-4 w-full outline outline-2 outline-offset-2 outline-slate-600 focus:outline-pink-500 bg-slate-700 text-white caret-pink-500 rounded-md shadow-sm">
        { value }
    </textarea>
}

templ TextareaInput2(name string, value string, vr valid.Condition) {
    <textarea name={name} rows="5" class="p-4 w-full outline outline-2 outline-offset-2 outline-red-500 only:outline-slate-600 focus:outline-pink-500 bg-slate-700 text-white caret-pink-500 rounded-md shadow-sm">
    { value }
    </textarea>
    if vr.Missing || vr.Invalid{
        <p class="text-red-500 pt-2">{ vr.String() }</p>
    }
}

templ BooleanInput(name string, value bool) {
    <input name={name} value="true" checked?={value} type="checkbox" class="accent-pink-500" />
}

templ BooleanInput2(name string, value bool, vr valid.Condition) {
    <input name={name} value="true" checked?={value} type="checkbox" class="accent-pink-500" />
    if vr.Missing || vr.Invalid{
        <p class="text-red-500 pt-2">{ vr.String() }</p>
    }
}

templ SelectInput(name string, value string, options []string) {
    <select name={name} class="px-4 w-full h-10 outline outline-2 outline-offset-2 outline-slate-600 focus:outline-pink-500 bg-slate-700 text-white rounded-md shadow-sm">
        <option disabled value="" selected?={value == ""}>Select an option</option>
        for _, opt := range options {
        <option selected?={value == opt}>{opt}</option>
        }
    </select>
}

templ SelectInput2(name string, value string, options []string, vr valid.Condition) {
    <select name={name} class="px-4 w-full h-10 outline outline-2 outline-offset-2 outline-red-500 only:outline-slate-600 focus:outline-pink-500 bg-slate-700 text-white rounded-md shadow-sm">
        <option disabled value="" selected?={value == ""}>Select an option</option>
        for _, opt := range options {
        <option selected?={value == opt}>{opt}</option>
        }
    </select>
    if vr.Missing || vr.Invalid{
        <p class="text-red-500 pt-2">{ vr.String() }</p>
    }
}