package evidences

import (
	"github.com/sprungknoedl/dagobert/components/utils"
	"github.com/sprungknoedl/dagobert/model"
    "github.com/sprungknoedl/dagobert/valid"
)

type EvidenceDTO struct {
	ID          int64
	CaseID      int64
	Type        string `form:"type"`
	Name        string `form:"name"`
	Description string `form:"description"`
	Size        int64  `form:"size"`
	Hash        string `form:"hash"`
	Location    string `form:"location"`
}

templ Form(env utils.Env, obj EvidenceDTO, vr valid.Result) {
    @utils.Modal("max-w-4xl") {
        <form hx-post={env.Routes("save-evidence", obj.CaseID, obj.ID)} hx-target="#modal">
        @utils.ModalHeader() {
            if obj.ID == 0 {
                Add evidence
            } else {
                Edit evidence
            }
        }
                
        @utils.ModalBody() {
            @utils.SelectInput("Type", "type", obj.Type, model.EvidenceTypes, true, vr["Type"])
            @utils.TextInput("Name", "name", obj.Name, true, vr["Name"])
            @utils.TextInput("Hash", "hash", obj.Hash, false, vr["Hash"])
            @utils.TextInput("Location", "location", obj.Location, false, vr["Location"])
            @utils.TextareaInput("Description", "description", obj.Description, false, vr["Description"])
        }

        @utils.DefaultCrudFooter() {}
        </form>
    }
}