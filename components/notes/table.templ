package notes

import (
	"github.com/sprungknoedl/dagobert/components/base"
	"github.com/sprungknoedl/dagobert/components/utils"
    "github.com/sprungknoedl/dagobert/model"
)

templ List(env utils.Env, cid int64, list []model.Note) {
    @base.TableView(env, "Notes", base.CrudUrls{
        List: env.Routes("list-notes", cid),
        Import: env.Routes("import-notes", cid),
        Export: env.Routes("export-notes", cid),
        Add: env.Routes("view-note", cid, 0),
    }) {
        @utils.TableHead() {
            @utils.TH(env, "category", templ.Attributes{"style": "width: 15rem"}) { Category }
            @utils.TH(env, "title", templ.Attributes{"style": "width: 15rem"}) { Title  }
            @utils.TH(env, "desc", templ.Attributes{"style": "width: auto"})  { Description  }
            @utils.TH(env, "", templ.Attributes{"style": "width: 7rem"})  { }
        }
        
        @utils.TableBody() {
            for _, obj := range list {
            @utils.TR() {
                @utils.TD() {{ obj.Category }}
                @utils.TD() {{ obj.Title }}
                @utils.TD() {{ obj.Description }}
                @utils.DefaultTableButtons(env.Routes("view-note", cid, obj.ID), env.Routes("delete-note", cid, obj.ID)) {}
            }}
        }

        if len(list) == 0 {
            @utils.EmptyCaption(env.Routes("view-note", cid, 0)) {}
        }
    }
}