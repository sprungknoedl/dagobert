package tasks

import (
	"github.com/sprungknoedl/dagobert/components/utils"
    "github.com/sprungknoedl/dagobert/model"
    "github.com/sprungknoedl/dagobert/valid"
)

type TaskDTO struct {
	ID      int64
	CaseID  int64
	Type    string `form:"type"`
	Task    string `form:"task"`
	Done    bool   `form:"done"`
	Owner   string `form:"owner"`
	DateDue string `form:"dateDue"`
}

templ Form(env utils.Env, obj TaskDTO, vr valid.Result) {
    @utils.Modal("max-w-4xl") {
        <form hx-post={env.Routes("save-task", obj.CaseID, obj.ID)} hx-target="#modal">
        @utils.ModalHeader() {
                if obj.ID == 0 {
                    Add task
                } else {
                    Edit task
                }
        }
                
        @utils.ModalBody() {
            @utils.SelectInput("Type", "type", obj.Type, model.TaskTypes, true, vr["Type"])
            @utils.TextInput("Task", "task", obj.Task, true, vr["Task"])
            @utils.TextInput("Owner", "owner", obj.Owner, false, vr["Owner"])
            @utils.TextInput("Due Date", "dueDate", obj.DateDue, false, vr["DateDue"])
            @utils.BooleanInput("Done", "done", obj.Done, vr["Done"])
        }

        @utils.DefaultCrudFooter() {}
        </form>
    }
}