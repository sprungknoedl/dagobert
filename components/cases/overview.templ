package cases

import (
    "fmt"

    "github.com/sprungknoedl/dagobert/model"
	"github.com/sprungknoedl/dagobert/components/base"
    "github.com/sprungknoedl/dagobert/components/icons"
	"github.com/sprungknoedl/dagobert/components/utils"
)

templ pill(color string) {
    <span class={"rounded-full py-2 px-4 mr-2 " + color}>{ children... }</span>
}

templ dlItem(title string) {
    <dt class="float-left clear-left w-32">{title}</dt>
    <dd class="ml-48 mb-6">{ children... }</dd>
}

templ dlClosed(closed bool) {
    if closed { 
        @pill("bg-zinc-600") { 
            @icons.Briefcase(icons.Inline)
            Closed
        }
    } else {
        @pill("bg-yellow-600") {
            @icons.Briefcase(icons.Inline)
            Open
        }
    }
}

templ dlSeverity(severity string) {
    switch severity {
     case "Low":    
        @pill("bg-yellow-600"){
            @icons.Bolt(icons.Inline)
            {severity}
        }
     case "Medium": 
        @pill("bg-amber-600"){
            @icons.Bolt(icons.Inline)
            {severity}
        }
     case "High":   
        @pill("bg-red-600"){
            @icons.Bolt(icons.Inline)
            {severity}
        }
    default:
        @pill("bg-zinc-600"){
            @icons.Bolt(icons.Inline)
            Unknown
        }
    }
}

templ dlOutcome(outcome string) {
    switch outcome {
    case "False positive" : 
        @pill("bg-green-600") {
            @icons.ViewfinderCircle(icons.Inline)
            {outcome}
        }
    case "True positive"  :
        @pill("bg-red-600") {
            @icons.ViewfinderCircle(icons.Inline)
            {outcome}
        }
    case "Benign positive":
        @pill("bg-zinc-600") {
            @icons.ViewfinderCircle(icons.Inline)
            {outcome}
        }
    default:
        @pill("bg-zinc-600") {
            @icons.ViewfinderCircle(icons.Inline)
            Unknown
        }
    }
}

templ Overview(env utils.Env, obj model.Case) {
    @base.Layout(env) {
        <main class="p-4 grow">
            <nav class="flex items-center justify-between mb-4">
                <h3 class="font-bold text-2xl ml-2">{ fmt.Sprintf("#%d - %s", obj.ID, obj.Name) }</h3>
                <div class="flex gap-5 items-center">
                    @utils.SecondaryLink(templ.Attributes{"href": env.Routes("generate-report", obj.ID), "target": "blank"}) {
                        @icons.DocumentArrowDown("inline-block mr-1 w-5 h-5")
                        Generate report
                    }
                    @utils.SecondaryButton(templ.Attributes{"hx-get": env.Routes("show-case", obj.ID), "hx-target": "section", "hx-select": "section", "hx-swap": "outerHTML"}) {
                        @icons.ArrowPath("inline-block mr-1 w-5 h-5")
                        Refresh
                    }
                    @utils.PrimaryButton(templ.Attributes{"hx-get": env.Routes("view-case", obj.ID), "hx-target": "#modal"}) {
                        @icons.Pencil("inline-block mr-1 w-5 h-5")
                        Edit
                    }
                </div>
            </nav>
            
            <section class="flex gap-6 my-8">
                <div class="bg-slate-700 p-8 w-1/2">
                    <h4 class="font-bold text-xl mb-6 pb-2 border-b border-b-slate-600">Case Overview</h4>
                    <dl> 
                        @dlItem("Case opened:") { @pill("bg-slate-800") {
                            @icons.Clock(icons.Inline)
                            {obj.DateAdded.Format("2006-01-02")}
                        }}
                        @dlItem("Case state:") {
                            @dlClosed(obj.Closed)
                        }
                        @dlItem("Classification:") { @pill("bg-slate-800") { 
                            @icons.ClipboardCheck(icons.Inline)
                            {obj.Classification}
                        }}
                        @dlItem("Case severity:") { 
                            @dlSeverity(obj.Severity)
                        }
                        @dlItem("Case outcome:") {
                            @dlOutcome(obj.Outcome)
                        }
                    </dl>
                </div>

                <div class="bg-slate-700 p-8 w-1/2">
                    <h4 class="font-bold text-xl mb-6 pb-2 border-b border-b-slate-600">Summary</h4>
                    <p>{obj.Summary}</p>
                </div>
            </section>
        </main>
    }
}