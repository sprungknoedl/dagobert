package cases

import (
	"github.com/sprungknoedl/dagobert/components/utils"
    "github.com/sprungknoedl/dagobert/model"
    "github.com/sprungknoedl/dagobert/pkg/valid"
)

type CaseDTO struct {
	ID             int64
	Name           string `form:"name"`
	Closed         bool   `form:"closed"`
	Classification string `form:"classification"`
	Severity       string `form:"severity"`
	Outcome        string `form:"outcome"`
	Summary        string `form:"summary"`
}

templ Form(env utils.Env, obj CaseDTO, vr valid.Result) {
    @utils.Modal("max-w-4xl") {
        <form hx-post={env.Routes("save-case", obj.ID)} hx-target="#modal">
        @utils.ModalHeader() {
            if obj.ID == 0 {
                Add case
            } else {
                Edit case
            }
        }

        @utils.ModalBody() {
            @utils.TextInput("Name", "name", obj.Name, true, vr["Name"])
            @utils.TextInput("Classification", "classification", obj.Classification, true, vr["Classification"])
            @utils.SelectInput("Severity", "severity", obj.Severity, model.CaseSeverities, true, vr["Severity"])
            @utils.SelectInput("Outcome", "outcome", obj.Outcome, model.CaseOutcomes, false, vr["Outcome"])
            @utils.TextareaInput("Summary", "summary", obj.Summary, false, vr["Summary"])
            @utils.BooleanInput("Case closed", "closed", obj.Closed, vr["Closed"])
        }

        @utils.DefaultCrudFooter() {}
        </form>
    }
}