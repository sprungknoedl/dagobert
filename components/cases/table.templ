package cases

import (
    "fmt"

    "github.com/sprungknoedl/dagobert/model"
	"github.com/sprungknoedl/dagobert/components/base"
	"github.com/sprungknoedl/dagobert/components/utils"
)

templ List(env utils.Env, list []model.Case) {
    @base.TableView(env, "Cases", base.CrudUrls{
        List: env.Routes("list-cases"),
        Import: env.Routes("import-cases"),
        Export: env.Routes("export-cases"),
        Add: env.Routes("view-case", 0),
    }) {
        @utils.TableHead() {
            @utils.TH(env, "id", templ.Attributes{"style": "width: 8rem"}) { ID  }
            @utils.TH(env, "name", templ.Attributes{"style": "width: auto"}) { Name  }
            @utils.TH(env, "classification", templ.Attributes{"style": "width: auto"}) { Classification  }
            @utils.TH(env, "severity", templ.Attributes{"style": "width: auto"}) { Severity  }
            @utils.TH(env, "outcome", templ.Attributes{"style": "width: auto"}) { Outcome  }
            @utils.TH(env, "", templ.Attributes{"style": "width: 7rem"}) { }
        }

        @utils.TableBody() {
            for _, obj := range list {
            @utils.TR() {
                @utils.TD() { <a class="hover:text-slate-200 hover:underline" href={templ.SafeURL(env.Routes("show-case", obj.ID))}>{ fmt.Sprintf("#%d", obj.ID) }</a> }
                @utils.TD() { <a class="hover:text-slate-200 hover:underline" href={templ.SafeURL(env.Routes("show-case", obj.ID))}>{ obj.Name }</a> }
                @utils.TD() {{ obj.Classification }}
                @utils.TD() {{ obj.Severity }}
                @utils.TD() {{ obj.Outcome }}
                @utils.DefaultTableButtons(env.Routes("view-case", obj.ID), env.Routes("delete-case", obj.ID)) {}
            }}
        }

        if len(list) == 0 {
            @utils.EmptyCaption(env.Routes("view-case", 0)) {}
        }
    }
}