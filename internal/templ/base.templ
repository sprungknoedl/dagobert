package templ

import (
	"fmt"

	"github.com/sprungknoedl/dagobert/internal/templ/icons"
	"github.com/sprungknoedl/dagobert/internal/templ/utils"
)

type CrudUrls struct {
	List   string
	Import string
	Export string
	Add    string
}

templ Layout(env utils.Env) {
	<!DOCTYPE html>
	<html lang="en" dir="ltr">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		<title>Dagobert</title>
		<link href="/dist/flowbite.min.css" rel="stylesheet" />
		<link href="/dist/dagobert.css" rel="stylesheet" />

		<script src="/dist/flowbite.min.js" defer></script>
		<script src="/dist/alpine.min.js" defer></script>
		<script src="/dist/hyperscript.min.js" defer></script>
		<script src="/dist/htmx.min.js" defer></script>
	</head>
	<body class="flex bg-slate-800 text-white">
		@Navigation(env)
		{ children... }

		<div id="modal" hx-swap-oob="true"></div>
		<div id="errors" class="fixed bottom-0 right-0 z-50"></div>

	</body>
	</html>
}

templ Navigation(env utils.Env) {
	<aside class="flex flex-col w-20 min-w-20 h-screen bg-slate-900 overflow-x-hidden">
		<div class="w-8 h-8 m-4 mx-auto bg-pink-500 text-slate-800 rounded-lg p-2">
			@icons.Dagobert("")
		</div>

		<hr class="m-4 border-slate-700"></hr>
		@navLink(env, "Cases", templ.URL("/"))                      { @icons.Briefcase("w-6 h-6") }
		@navLink(env, "Users", templ.URL(env.Routes("list-users"))) { @icons.Users("w-6 h-6") }

		if env.ActiveCase.ID != 0 {
		<hr class="m-4 border-slate-700"></hr>
		@navLink(env, "Overview", templ.URL(env.Routes("show-case", env.ActiveCase.ID)))         { @icons.Identification("w-6 h-6") }
		@navLink(env, "Timeline", templ.URL(env.Routes("list-events", env.ActiveCase.ID)))       { @icons.Clock("w-6 h-6") }
		@navLink(env, "Assets", templ.URL(env.Routes("list-assets", env.ActiveCase.ID)))         { @icons.Desktop("w-6 h-6") }
		@navLink(env, "Indicators", templ.URL(env.Routes("list-indicators", env.ActiveCase.ID))) { @icons.GlobeEurope("w-6 h-6") }
		@navLink(env, "Malware", templ.URL(env.Routes("list-malware", env.ActiveCase.ID)))       { @icons.Bug("w-6 h-6") }
		@navLink(env, "Evidences", templ.URL(env.Routes("list-evidences", env.ActiveCase.ID)))   { @icons.Cube("w-6 h-6") }
		@navLink(env, "Tasks", templ.URL(env.Routes("list-tasks", env.ActiveCase.ID)))           { @icons.ClipboardCheck("w-6 h-6") }
		@navLink(env, "Notes", templ.URL(env.Routes("list-notes", env.ActiveCase.ID)))           { @icons.ChatBubble("w-6 h-6") }
		}

		<div class="grow"></div>
		<hr class="m-4 border-slate-700"></hr>
		@navLink(env, "Logout", templ.URL(env.Routes("logout"))) { @icons.Logout("w-6 h-6") }
	</aside>
}

templ navLink(env utils.Env, name string, href templ.SafeURL) {
	if string(href) == env.ActiveRoute {
	<a href={ href } data-tooltip-target={"tooltip-"+name} data-tooltip-placement="right"
		class="flex justify-center items-center min-w-16 min-h-16 bg-slate-800 font-bold hover:text-white">
		{ children... }
	</a>
	} else {
	<a href={ href } data-tooltip-target={"tooltip-"+name} data-tooltip-placement="right"
		class="flex justify-center items-center min-w-16 min-h-16 text-slate-400 hover:text-white">
		{ children... }
	</a>
	}

	<div id={"tooltip-"+name} role="tooltip" class="absolute z-10 invisible inline-block px-4 py-3 text-sm font-medium text-white transition-opacity duration-300 bg-slate-900 rounded-lg shadow-sm opacity-0 tooltip">
		{ name } 
		<div class="tooltip-arrow" data-popper-arrow></div>
	</div>
}

templ Navbar(env utils.Env, title string, search bool, sort bool) {
	<nav class="flex items-center justify-between mb-4">
		<h3 class="font-bold text-2xl ml-2">{ title }</h3>

		<div class="flex gap-5 items-center">
			if search {
				@utils.Search(env)
			}
			if sort {
				@utils.Sort(env)
			}

			<div class="inline-flex rounded-md shadow-sm" role="group">
				{ children... }
			</div>
		</div>
	</nav>
}

templ TableView(env utils.Env, title string, urls CrudUrls) {
	@Layout(env) {
		<main class="p-8 grow">
		<form hx-get={urls.List} hx-trigger="input delay:500ms, sort"
			hx-target="#list" hx-select="#list" hx-swap="outerHTML" hx-push-url="true"
			x-data={fmt.Sprintf("{ sort_by: '%s' }", env.Sort)}>

			@Navbar(env, title, true, true) {
				if urls.Import != "" {
					@utils.GroupedButton(templ.Attributes{
						"hx-get": urls.Import,
						"hx-target": "#modal", "hx-select": "aside", "hx-swap": "innerHTML", "hx-push-url": "false",
						"_": "on keydown[key is 'i' and ctrlKey is true] from window call me.click()",
					}) {
						@icons.ArrowUpTray("inline-block mr-1 w-5 h-5")
						Import CSV
					}
				}
				if urls.Export != "" {
					@utils.GroupedLink(templ.Attributes{
						"href": urls.Export,
						"_": "on keydown[key is 'e' and ctrlKey is true] from window call me.click()",
					}) {
						@icons.ArrowDownTray("inline-block mr-1 w-5 h-5")
						Export CSV
					}
				}
				@utils.GroupedButton(templ.Attributes{
					"@click": "$dispatch('sort')",
					"_": "on keydown[key is 'r' and ctrlKey is true] from window call me.click()",
				}) {
					@icons.ArrowPath("inline-block mr-1 w-5 h-5")
					Refresh
				}
				if urls.Add != "" {
					@utils.GroupedButton(templ.Attributes{
						"hx-get": urls.Add,
						"hx-target": "#modal", "hx-select": "aside", "hx-swap": "innerHTML", "hx-push-url": "false",
						"_": "on keydown[key is 'n' and ctrlKey is true] from window call me.click()",
					}) {
						@icons.Plus("inline-block mr-1 w-5 h-5")
						Add
					}
				}
			}

			@utils.Table() {
				{ children... }
			}

		</form>
		</main>
	}
}
